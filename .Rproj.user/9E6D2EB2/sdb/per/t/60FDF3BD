{
    "contents" : "if(!require(stringr)) install.packages (\"stringr\")\nlibrary(stringr)\n\n\nif(!require(RCurl)) install.packages (\"RCurl\")\nlibrary(RCurl)\n\n\n# Code to read local files\n# fpath = paste(getwd(), \"/data/\", sep = \"\")\n# fileName = \"gourmetFoods.txt\"   \n# inputFile <- paste(fpath, fileName, sep = \"\")\n# conn  <- file(inputFile, open = \"r\")\n# line=readLines(conn, n = -1L, ok = TRUE, warn = FALSE)\n# close(conn)\n\nx <- \"https://raw.githubusercontent.com/jwindokun/FinalProject/master/data/gourmetFoods_test.txt\"\n\ntry ({\nline <- read.csv(x, header = FALSE, sep = \"\")\n})\n\ndf <- data.frame(productID =character(), title = character(), price = as.numeric(character()), userID =character(), profileName = character(),\n                 helpfulness = character(), score = as.numeric(character()), time = character(), summary = character(), text = character(),stringsAsFactors=FALSE)\n\nt = character()\nn = 1\nd <- data.frame(productID =character(), title = character(), price = as.numeric(character()), userID =character(), profileName = character(),\n                helpfulness = character(), score = as.numeric(character()), time = character(), summary = character(), text = character(),stringsAsFactors=FALSE)\n\n\n#for (i in 1:length(line)){\n# for the purpose of demonstration will only read in the first 10000 lines of the file  \nfor (i in 1:1000){  \n  \ntry({\n w = str_split_fixed(line[i], \":\", 2)\n    if (!is.na(w[1])){\n      if (n < 11) {\n        d[1, n] = str_trim(w[2])\n        n = n + 1\n        } else {\n        df = rbind(df, d)\n        n = 1\n      }\n    }\n \n}, silent = TRUE)\n  }\n\n\n\nstr(df)\n\n#clean the data\n\ndf$time = as.POSIXct(as.numeric(df$time), origin=\"1970-01-01\")\ndf$price[df$price == \"unknown\"] = 0\ndf$price = as.numeric(df$price)\ndf$score = as.numeric(df$score)\n\nfor (i in 1 :length(df$helpfulness)){\n\n  e = df$helpfulness[i]\n  e = strsplit(e, split = \"/\", fixed = TRUE)[[1]]\n  e = as.numeric(e[1])/as.numeric(e[2])\n  if (is.finite(e)) {\n        df$helpfulness[i] = e\n    } else {\n\n        df$helpfulness[i] = 0\n    }\n}\n\ndf$helpfulness = as.numeric(df$helpfulness)\n\nstr(df)\ndf[1,]\n\n\n\n\n\n\n\n",
    "created" : 1418411310513.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "502229098",
    "id" : "60FDF3BD",
    "lastKnownWriteTime" : 1418411578,
    "path" : "C:/Users/Jare_2/Desktop/WorkDocs/Git/Git/Cuny/607/FinalProject/FinalProject/FinalProject/R/webdata.R",
    "project_path" : "R/webdata.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}